// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:senai@127.0.0.1:3306/auth_db"
}

// user table
model user {
  id       Int       @id @default(autoincrement())
  name     String
  email    String    @unique
  password String
  token    token[]
  produtos produto[]
  pedidos  pedidos[]
}

// token table
model token {
  id        Int      @id @default(autoincrement())
  token     String   @db.VarChar(255)
  type      String   
  userId    Int
  revoked   Boolean  @default(value: false)
  expiresAt DateTime
  user      user     @relation(fields: [userId], references: [id])
}

// produto table
model produto {
  id              Int               @id @default(autoincrement())
  nome            String
  descricao       String?
  preco           Decimal           @db.Decimal(10, 2)
  status          String            @default("Disponivel")
  estoque         Int
  userId          Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  user            user              @relation(fields: [userId], references: [id])
  pedidosProdutos pedidosProdutos[]
}

// pedidos 
model pedidos {
  id              Int               @id @default(autoincrement())
  valor           Decimal           @db.Decimal(10, 2)
  status          String
  userId          Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  user            user              @relation(fields: [userId], references: [id])
  pedidosProdutos pedidosProdutos[]
}

// tabela de relação entre pedidos e produtos
model pedidosProdutos {
  id        Int     @id @default(autoincrement())
  pedidoId  Int
  produtoId Int
  quantidade Int    @default(1)
  precoUnitario Decimal @db.Decimal(10, 2)
  pedido    pedidos @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  produto   produto @relation(fields: [produtoId], references: [id], onDelete: Cascade)
  
  @@unique([pedidoId, produtoId])
}